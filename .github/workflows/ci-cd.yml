name: CI/CD Pipeline with Docker

on:
  push:
    branches:
      - main # Ejecuta el pipeline cuando se hace push a la rama principal
  pull_request:
    branches:
      - main # Ejecuta el pipeline cuando se crea un Pull Request hacia main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Configurar Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Usa la versión de Node.js que estés utilizando

      # Paso 3: Instalar dependencias
      - name: Install dependencies
        run: npm install

      # Paso 4: Ejecutar tests
      - name: Run tests
        run: npm test

  build-and-push-docker:
    needs: test # Este job solo se ejecuta si el job "test" pasa
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Iniciar sesión en Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Paso 3: Construir la imagen Docker
      - name: Build Docker image
        run: docker build -t my-app .

      # Paso 4: Etiquetar la imagen
      - name: Tag Docker image
        run: |
          docker tag my-app ${{ secrets.DOCKER_USERNAME }}/my-app:latest
          docker tag my-app ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}

      # Paso 5: Publicar la imagen en Docker Hub
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}

  deploy:
    needs: build-and-push-docker # Este job solo se ejecuta si el job anterior pasa
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Desplegar usando Docker Compose
      - name: Deploy with Docker Compose
        run: |
          echo "Desplegando aplicación con Docker Compose..."
          docker-compose up -d